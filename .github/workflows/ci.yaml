name: CI

on: push

jobs:
  start:
    name: "Starting..."
    runs-on: ubuntu-latest
    steps:
      - name: Starting
        run: echo "Starting CI..."

  # This job will build and push a Docker image to Google Artifact Registry for DEV environment.
  ci_development:
    needs: start
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    environment: development

    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./cmd/ticketsd/main.go

      - name: Test
        run: go test -v ./...

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}" # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}" # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ secrets.GCP_ARTIFACT_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        env:
          ARTIFACT_LOCATION: ${{ secrets.GCP_ARTIFACT_LOCATION }}
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          ARTIFACT_REPO: ${{ secrets.GCP_ARTIFACT_REPO }}
          SERVICE: tickets
        run: |-
          docker build -t "$ARTIFACT_LOCATION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/$SERVICE:${{ github.sha }}" ./
          docker push "$ARTIFACT_LOCATION-docker.pkg.dev/PROJECT_ID/$ARTIFACT_REPO/$SERVICE:${{ github.sha }}"
